# Unless otheriwse noted, all options can take lists
# If an option is a list, an analysis will be run with all combinations of options.
# This can produce a very large number of analyses if you are not careful.

# sum_stats is a csv file. A list of files is ok. If a list, label should also be a list.
# label is the prefix that will be used for all files from the analysis
input:
    sum_stats: "astle_bloodcell.csv" # list ok
    label: "bc" # list ok, should be the same length as sum_stats

analysis:
    # LD pruning options: Required for all types of analysis
    # r2_thresh: threshold for pairwise r^2 between variants
    # clump_kb Maximum distance for pruning.
    # ref_path Path to plink format reference data
    # ld_prioritization: either pvalue or rank
    ldprune:
        r2_thresh: 0.01
        clump_kb: [1000]
        ld_prioritization: ["pvalue"] # "pvalue" or "rank"
        ref_path: "/nfs/turbo/sph-jvmorr/ld_reference_files/1kg_plink/EUR"
    # R options: required for all types of analysis
    # Specifies options for how nuisance correlation is estimated.
    # Type can be either "ldsc", "pt", or "none". LDSC or pt will both work. pt is faster and generally gives nearly identical results to LDSC.
    # type is a list - one analysis will be run for each element of the list.
    # if type includes "pt", pthresh must be specified.
    # l2_dir is required if type includes "ldsc"
    # The cor_clust option is useful when analyzing highly correlated traits from overlapping samples. Traits will be clustered greedily and a
    # representative trait selected so that no pair of traits have nuisance correlation greater than the vlaue specified. If you don't
    # need to perform clustering, just set cor_clust to 1.
    R:
      type: ["ldsc"] # options are "pt", "ldsc", "none"
      pthresh: [0.05]
      l2_dir: "/nfs/turbo/sph-jvmorr/ld_reference_files/ldsc_reference_files/eur_w_ld_chr/" # not a list
      cond_num: 1e3
    # GFA options:
    #   The GFA pipeline will run GFA on all of the tratits in the csv.
    #       It will also compute the GLS weights for all SNPs that have complete data and compute the genetic correlation of the factors.
    #   gfa_params: If "default", will use default parameters, otherwise provide a .RDS file containing a prameter list eg "list(max_iter = 500)".
    #   max_snps: largest number of variants to allow
    #   maxrep: If algorithm does not converge in maxiter iterations, the pipeline will try again this number of times. This allows restarting of non-converged fits.
    #   gfa_seed: Seed for GFA. This can be a list, in which case multiple fits will be done using different seeds.
    #   af_thresh: allele frequency threshold
    #   sample_size_tol: Tolerance for sample size variability around the median sample size per trait. Let M_t be the median sample size for trait t. If
    #              the sample size for SNP j in trait t is N_{j,t}, SNP j will be excluded unless (1-sample_size_tol)*M_t <= N_{j,t} <= (1 + sample_size_tol)*M_t
    gfa:
      gfa_params: "default" # not a list
      max_snps: Inf # not a list
      maxrep: 5 # not a list
      gfa_seed: 1 # list ok
      af_thresh: 0.01 # not a list
      sample_size_tol: 0.1 # not a list
      cor_clust: [1, 0.98, 0.95] # list ok

out:
    # Output data options:
    # data_dir: Directory to store reformatted data
    # output_dir: Where to store results
    data_dir: "data/"
    output_dir: "gfa_results/"

